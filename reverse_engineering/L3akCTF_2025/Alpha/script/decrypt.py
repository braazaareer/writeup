# A script to decrypt and disassemble self-modifying code with chained XOR keys.
# The output of each decryption becomes the input for the next.
# Dependencies: capstone (pip install capstone)

from capstone import *

def solve_smc_chained_chunk():
    initial_encrypted_code = bytes([
        0x55, 0x48, 0x89, 0xe5, 0x41, 0x54, 0x53, 0x48,
        0x83, 0xec, 0x50, 0xc6, 0x45, 0xef, 0x01, 0x48,
        0x8b, 0x05, 0xea, 0x2c, 0x00, 0x00, 0x48, 0x89,
        0xc7, 0xb8, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x9d,
        0xfd, 0xff, 0xff, 0x48, 0x8b, 0x15, 0xf6, 0x2c,
        0x00, 0x00, 0x48, 0x8d, 0x45, 0xa0, 0xbe, 0x40,
        0x00, 0x00, 0x00, 0x48, 0x89, 0xc7, 0xe8, 0x95,
        0xfd, 0xff, 0xff, 0x0f, 0xb6, 0x45, 0xa9, 0x90
    ])

    full_xor_key_stream = bytes([ 0x5a, 0xf6, 0x51, 0xea, 0xf7, 0x11, 0xf3, 0x0c, 0x8c, 0x52, 0xb0, 0xc9, 0xf3, 0xaa, 0xad, 0x47, 0x35, 0xd5, 0xe5, 0x9a, 0x45, 0xad, 0x47, 0x37, 0x07, 0x31, 0xd6, 0x89, 0xc7, 0xe8, 0xf0, 0x9e, 0xfd, 0xff, 0xbb, 0xc1, 0x6d, 0x9c, 0x31, 0xc4, 0x8c, 0x03, 0x48, 0x8d, 0xcc, 0x7e, 0x37, 0x87, 0xe8, 0xf6, 0x01, 0x48, 0x89, 0xfa, 0xce, 0x86, 0xfd, 0xff, 0xf0, 0x9b, 0x76, 0x4a, 0x1f, 0x40, 0x00, 0x08, 0x9d, 0xe0, 0x97, 0x95, 0x25, 0x84, 0x00, 0x2b, 0x20, 0x87, 0xf3, 0xaa, 0xa3, 0xb9, 0xfb, 0x64, 0x00, 0x08, 0x9d, 0xa2, 0xb9, 0xfb, 0x76, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0xae, 0x46, 0xaa, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x46, 0x83, 0xbd, 0xc0, 0x89, 0x5f, 0x57, 0x4e, 0x2f, 0xee, 0xf5, 0x01, 0x00, 0x44, 0xb4, 0xc0, 0x9a, 0xc7, 0xe8, 0xbc, 0x94, 0xc0, 0x0f, 0x3f, 0x0e, 0x86, 0x71, 0xad, 0x5e, 0x22, 0xd0, 0x85, 0x43, 0xf7, 0x55, 0xcf, 0x1c, 0x85, 0xe0, 0xb9, 0x66, 0x4a, 0x02, 0x4a, 0x51, 0xf9, 0xdf, 0x33, 0x85, 0xb9, 0xd1, 0xcf, 0x36, 0xa5, 0xe0, 0xb9, 0xf3, 0xef, 0xad, 0xb1, 0x6e, 0xd7, 0xb9, 0xf3, 0xeb, 0xa3, 0xfa, 0xcf, 0x37, 0x36, 0x86, 0x71, 0xad, 0xac, 0x0c, 0xbe, 0xd0, 0x4b, 0x3f, 0xa3, 0x2e, 0xc8, 0x56, 0x73, 0x89, 0xd6, 0x89, 0x4e, 0x4e, 0x61, 0x74, 0xeb, 0xb1, 0x03, 0x44, 0x89, 0x65, 0x71, 0x07, 0xe7, 0x76, 0xc0, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0xf8, 0xd0, 0x85, 0xc0, 0x8c, 0x6d, 0x79, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x95, 0xad, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x6c, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x1c, 0x4a, 0x15, 0xdf, 0xb1, 0x6e, 0x4a, 0x11, 0x4a, 0x0e, 0x84, 0x86, 0x68, 0x69, 0x57, 0x00, 0xe7, 0x05, 0x46, 0xa7, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x5c, 0xed, 0xbe, 0xc0, 0x89, 0x5f, 0x57, 0x4e, 0x2f, 0x49, 0xda, 0x00, 0x00, 0x44, 0x0a, 0x1e, 0x30, 0xc8, 0x7c, 0x47, 0x0d, 0xb6, 0xd0, 0x86, 0x68, 0xcc, 0x28, 0xc9, 0xd1, 0x87, 0xc0, 0x0f, 0xa8, 0x22, 0xaa, 0x45, 0xef, 0x00, 0x22, 0x85, 0xa4, 0xb9, 0x6e, 0xd7, 0xb9, 0xf3, 0xaa, 0x91, 0x94, 0x8a, 0x7e, 0xef, 0x05, 0x50, 0x87, 0xf3, 0xaa, 0xa8, 0xb9, 0xfb, 0x77, 0x00, 0x08, 0x9d, 0xbb, 0xb9, 0xfb, 0x6f, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0x17, 0x46, 0xa8, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x49, 0x88, 0xbc, 0xc0, 0x89, 0x5f, 0x57, 0x4e, 0x2f, 0xea, 0x03, 0x02, 0x00, 0x44, 0xb4, 0x04, 0xab, 0xc7, 0xe8, 0x8a, 0x97, 0xc0, 0x0f, 0x3f, 0x0e, 0x86, 0x71, 0xad, 0x00, 0x20, 0xd0, 0x85, 0x50, 0x9f, 0x05, 0x50, 0xb5, 0x63, 0xae, 0x0b, 0xb6, 0x4a, 0x33, 0xcf, 0xb1, 0x6e, 0xdf, 0xb9, 0xf3, 0xea, 0xab, 0x2e, 0x6e, 0x65, 0xcf, 0xb9, 0xd0, 0x68, 0x87, 0xfb, 0x3f, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x18, 0x86, 0x60, 0xcc, 0x6f, 0xac, 0x0d, 0xbc, 0xe0, 0x0f, 0xf2, 0xcc, 0x47, 0x86, 0x79, 0x38, 0x8a, 0xb5, 0x45, 0xb6, 0x86, 0x60, 0x49, 0x4e, 0x3e, 0x66, 0xc6, 0xe8, 0x79, 0x93, 0x90, 0x90, 0x00, 0x79, 0xaf, 0xa7, 0x8d, 0xc7, 0xe7, 0x3a, 0xc3, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0x06, 0xd3, 0x85, 0xc0, 0x8c, 0x6d, 0xb3, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x95, 0xbb, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x68, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x17, 0x4a, 0x1f, 0xdf, 0xb1, 0x6e, 0x4a, 0x00, 0x4a, 0x15, 0x84, 0x86, 0x68, 0x69, 0xc8, 0x5e, 0x3c, 0xb7, 0x0f, 0xbe, 0x40, 0x4b, 0x3f, 0xa3, 0x3b, 0xc8, 0x56, 0x6e, 0x8a, 0xd6, 0x89, 0x4e, 0x36, 0xa3, 0xc4, 0xe8, 0x27, 0x47, 0x89, 0xe6, 0x0a, 0x3f, 0x9b, 0x58, 0x94, 0xc0, 0x0f, 0x3f, 0x0e, 0x86, 0x71, 0xad, 0x7a, 0x22, 0xd0, 0x85, 0xfd, 0xea, 0x95, 0xc0, 0x88, 0x4a, 0x7b, 0xcf, 0xb9, 0xf3, 0x71, 0x00, 0x08, 0x9d, 0xe0, 0x97, 0x95, 0x2e, 0x84, 0x00, 0x2b, 0x20, 0x87, 0xf3, 0xaa, 0xbb, 0xb9, 0xfb, 0x65, 0x00, 0x08, 0x9d, 0xbd, 0xb9, 0xfb, 0x64, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0x9c, 0x46, 0xa0, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x45, 0x58, 0xbe, 0xc0, 0x89, 0x5f, 0x57, 0x4e, 0x2f, 0xe1, 0x97, 0x03, 0x00, 0x44, 0xb4, 0x03, 0x89, 0xc7, 0xe8, 0xf0, 0x95, 0xc0, 0x0f, 0x3f, 0x0e, 0x86, 0x71, 0xad, 0x9c, 0x23, 0xd0, 0x85, 0x43, 0xf7, 0xc5, 0xcf, 0x1c, 0x85, 0xe0, 0xb9, 0x66, 0xd5, 0x25, 0x00, 0x08, 0x9d, 0xe0, 0x97, 0x95, 0x21, 0x84, 0x00, 0x2b, 0x20, 0x87, 0xf3, 0xaa, 0xaf, 0xb9, 0xfb, 0x66, 0x00, 0x08, 0x9d, 0xa2, 0xb9, 0xfb, 0x66, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0xbf, 0x47, 0xac, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x4c, 0xf0, 0xbf, 0xc0, 0x89, 0x5f, 0x57, 0x4e, 0x2f, 0xd5, 0x73, 0x02, 0x00, 0x44, 0x0a, 0x1e, 0xd9, 0xc8, 0x7c, 0xba, 0x0c, 0xb6, 0xd0, 0x19, 0x4e, 0x86, 0x71, 0xad, 0x5e, 0x22, 0xd0, 0x85, 0xfd, 0x83, 0x95, 0xc0, 0x88, 0x4a, 0x7b, 0xcf, 0xb9, 0xf3, 0x66, 0x00, 0x08, 0x9d, 0xe0, 0x97, 0x95, 0x23, 0x84, 0x00, 0x2b, 0x20, 0x87, 0xf3, 0xaa, 0xa3, 0xb9, 0xfb, 0x76, 0x00, 0x08, 0x9d, 0xab, 0xb9, 0xfb, 0x63, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0x8b, 0x45, 0xb3, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x59, 0x75, 0xbd, 0xc0, 0x89, 0x5f, 0x4e, 0x00, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x79, 0x05, 0xe6, 0x89, 0xc7, 0xe7, 0x03, 0xc2, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0xaf, 0xd2, 0x85, 0xc0, 0x8a, 0x55, 0xcf, 0x1c, 0x85, 0xe0, 0xb9, 0x66, 0x4a, 0x10, 0x4a, 0x51, 0xf9, 0xdf, 0x33, 0x85, 0xac, 0xd1, 0xcf, 0x36, 0xa5, 0xe0, 0xb9, 0xf3, 0xf6, 0xaa, 0xb1, 0x6e, 0xd7, 0xb9, 0xf3, 0xf4, 0xbd, 0xfa, 0xcf, 0x37, 0x36, 0x00, 0x86, 0x71, 0xad, 0x48, 0x0f, 0xbe, 0xd0, 0x4b, 0x3f, 0xa3, 0x2a, 0xc8, 0x56, 0x57, 0x8b, 0xd6, 0x89, 0x4e, 0x36, 0x28, 0xc4, 0xe8, 0x8e, 0x46, 0x89, 0xe6, 0x0c, 0x07, 0xe7, 0xc4, 0xc0, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0x20, 0xd2, 0x85, 0xc0, 0x32, 0x35, 0xd9, 0x88, 0x45, 0xe0, 0x9b, 0x76, 0x4a, 0x13, 0xdf, 0xb1, 0x6e, 0x4a, 0x59, 0x64, 0x62, 0xc1, 0xcf, 0xb1, 0x75, 0x50, 0x87, 0xf3, 0xaa, 0xad, 0xb9, 0xfb, 0x7e, 0x00, 0x08, 0x9d, 0xac, 0xb9, 0xfb, 0x66, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0x17, 0x46, 0xa0, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x5a, 0x5f, 0xbe, 0xc0, 0x89, 0x5f, 0x57, 0x4e, 0x2f, 0xea, 0x03, 0x02, 0x00, 0x44, 0xb4, 0x46, 0x90, 0xc7, 0xe8, 0x7a, 0x96, 0xc0, 0x0f, 0x3f, 0x0e, 0x86, 0x71, 0xad, 0xda, 0x21, 0xd0, 0x85, 0x43, 0xf7, 0xd5, 0x50, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x95, 0xa1, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x66, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x16, 0x4a, 0x1b, 0xdf, 0xb1, 0x6e, 0x4a, 0x04, 0x4a, 0x1a, 0x84, 0x86, 0x68, 0x69, 0xc8, 0x5e, 0x47, 0xa0, 0x0f, 0xbe, 0x94, 0x86, 0x50, 0xcc, 0x65, 0xe7, 0xcb, 0xc2, 0x89, 0xd6, 0x00, 0x19, 0x61, 0xa9, 0xea, 0x35, 0x00, 0x44, 0x89, 0x65, 0x71, 0x87, 0x00, 0xe7, 0xa1, 0xc3, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0xbb, 0xd2, 0x85, 0xc0, 0x8c, 0x6d, 0x92, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x95, 0xaa, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x64, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x14, 0x4a, 0x11, 0xdf, 0xb1, 0x6e, 0x4a, 0x14, 0x4a, 0x12, 0x84, 0x86, 0x68, 0x69, 0xc8, 0x5e, 0x2b, 0xab, 0x0f, 0xbe, 0x94, 0x86, 0x50, 0xcc, 0x67, 0x00, 0xe7, 0x8b, 0xc3, 0x89, 0xd6, 0x00, 0x19, 0x61, 0x6b, 0xeb, 0x9a, 0x02, 0x44, 0x89, 0x65, 0x71, 0x95, 0xe7, 0x81, 0xc2, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0xf3, 0xd0, 0x85, 0xc0, 0x32, 0x59, 0xc7, 0x88, 0x45, 0xe0, 0x9b, 0x76, 0x4a, 0x19, 0xdf, 0xb1, 0x6e, 0x4a, 0x59, 0x64, 0x7c, 0xc1, 0xcf, 0xb1, 0x75, 0xcf, 0x3e, 0x00, 0x46, 0x00, 0x08, 0x95, 0xa4, 0xb9, 0xfb, 0x78, 0x00, 0x00, 0x08, 0x85, 0x3c, 0x92, 0x86, 0x79, 0x08, 0xa3, 0xb5, 0x45, 0xac, 0x4b, 0x37, 0x36, 0x86, 0x71, 0xad, 0xa4, 0x0d, 0xbe, 0xc0, 0x00, 0x08, 0x00, 0x00, 0x00, 0xde, 0x02, 0x00, 0x00, 0x79, 0x45, 0xe1, 0x89, 0xc7, 0xe7, 0xdc, 0xc0, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0xa7, 0xd3, 0x85, 0xc0, 0x32, 0x61, 0xe1, 0x88, 0x45, 0xe0, 0x9b, 0x76, 0x4a, 0x1d, 0xdf, 0x2e, 0x48, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x65, 0xdf, 0x3b, 0x20, 0x00, 0x23, 0x85, 0x24, 0x4a, 0x51, 0xdf, 0xb9, 0xf3, 0xf4, 0xbe, 0xb1, 0x66, 0xcf, 0x3f, 0x93, 0x3f, 0x83, 0xe7, 0xb2, 0xe2, 0x0f, 0xb6, 0x01, 0x25, 0xe9, 0x37, 0x17, 0xe7, 0xfe, 0x45, 0xb6, 0x0f, 0x37, 0x1e, 0x00, 0x11, 0x61, 0x41, 0xeb, 0x74, 0x02, 0x3d, 0xf4, 0x65, 0x89, 0xe6, 0x86, 0x53, 0x28, 0x3c, 0xb6, 0xd0, 0x90, 0x19, 0x4e, 0x86, 0x71, 0xad, 0x5e, 0x22, 0xd0, 0x85, 0xfd, 0xa2, 0x95, 0xc0, 0x88, 0x4a, 0x7b, 0xcf, 0xb9, 0xf3, 0x61, 0x00, 0x08, 0x9d, 0xe0, 0x97, 0x95, 0x33, 0x84, 0x00, 0x2b, 0x20, 0x87, 0xf3, 0xaa, 0xa3, 0xb9, 0xfb, 0x61, 0x00, 0x08, 0x9d, 0xb9, 0xb9, 0xfb, 0x77, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0xc2, 0x47, 0xb0, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x5f, 0x3c, 0xbe, 0xc0, 0x89, 0x5f, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x24, 0xe6, 0x89, 0xc7, 0xe7, 0x03, 0xc2, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0x30, 0xd2, 0x85, 0xc0, 0x8c, 0x6d, 0xa9, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x95, 0xbe, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x77, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x06, 0x4a, 0x0b, 0xdf, 0xb1, 0x6e, 0x4a, 0x01, 0x4a, 0x1f, 0x84, 0x86, 0x68, 0x70, 0x86, 0x71, 0xad, 0x11, 0x0c, 0xbe, 0xd0, 0x4b, 0x3f, 0xa3, 0x2b, 0xc8, 0x56, 0x57, 0x8b, 0xd6, 0x89, 0x4e, 0x36, 0x53, 0xc7, 0xe8, 0x11, 0x46, 0x89, 0xe6, 0x0a, 0x3f, 0x81, 0x88, 0x96, 0xc0, 0x0f, 0x3f, 0x0e, 0x86, 0x71, 0xad, 0x28, 0x21, 0xd0, 0x85, 0x43, 0xf7, 0x2a, 0xcf, 0x1c, 0x85, 0xe0, 0xb9, 0x66, 0x4a, 0x03, 0x4a, 0x51, 0xf9, 0xdf, 0x33, 0x85, 0xae, 0xd1, 0xcf, 0x2e, 0x70, 0x87, 0xf3, 0xaa, 0xaf, 0xb9, 0xfb, 0x72, 0x00, 0x08, 0x9d, 0xad, 0xb9, 0xfb, 0x60, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0x6c, 0x45, 0xb6, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x46, 0x88, 0xbc, 0xc0, 0x89, 0x5f, 0x57, 0x4e, 0x2f, 0xea, 0xc5, 0x00, 0x00, 0x44, 0x0a, 0x1e, 0x36, 0xc8, 0x7c, 0x45, 0x0c, 0xb6, 0xd0, 0x86, 0x68, 0xcc, 0x28, 0xc9, 0x3f, 0x84, 0xc0, 0x0f, 0x05, 0x50, 0x00, 0x00, 0xb5, 0xc9, 0xd0, 0x08, 0xb6, 0x4a, 0x36, 0xcf, 0xb1, 0x6e, 0xdf, 0xb9, 0xf3, 0xe5, 0xab, 0x2e, 0x6e, 0x65, 0xcf, 0xb9, 0xd0, 0x76, 0x87, 0xfb, 0x3f, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x18, 0x86, 0x60, 0xcc, 0x75, 0xac, 0x0d, 0xbc, 0xe0, 0x0f, 0xf2, 0xcc, 0x49, 0x86, 0x79, 0x38, 0x8a, 0xb5, 0x45, 0xa4, 0x86, 0x60, 0x49, 0x4e, 0x3e, 0x66, 0xc6, 0xe8, 0xb2, 0x90, 0x90, 0x90, 0x00, 0x79, 0x05, 0xd9, 0x8e, 0xc7, 0xe7, 0xb5, 0xc2, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0xff, 0xd0, 0x85, 0xc0, 0x32, 0xce, 0xc3, 0x88, 0x45, 0xe0, 0x9b, 0x76, 0x4a, 0x02, 0xdf, 0xb1, 0x6e, 0x4a, 0x59, 0x64, 0x62, 0xc1, 0xcf, 0xb1, 0x75, 0xcf, 0x3e, 0x00, 0x40, 0x00, 0x08, 0x95, 0xae, 0xb9, 0xfb, 0x7c, 0x00, 0x08, 0x85, 0x2c, 0x92, 0x86, 0x79, 0x08, 0xbd, 0xb6, 0x45, 0xa8, 0x00, 0x4b, 0x37, 0x36, 0x86, 0x71, 0xad, 0x80, 0x0d, 0xbe, 0xc0, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xd2, 0xe5, 0x89, 0xc7, 0xe7, 0x9a, 0xc2, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0x24, 0xd2, 0x85, 0xc0, 0x32, 0x97, 0xf1, 0x88, 0x45, 0xe0, 0x9b, 0x76, 0x4a, 0x17, 0xdf, 0xb1, 0x6e, 0x4a, 0x59, 0x64, 0x75, 0xc1, 0xcf, 0xb1, 0x75, 0xcf, 0x3e, 0x00, 0x47, 0x00, 0x00, 0x08, 0x95, 0xa9, 0xb9, 0xfb, 0x79, 0x00, 0x08, 0x85, 0x2a, 0x92, 0x86, 0x79, 0x08, 0xd1, 0xb6, 0x45, 0xb0, 0x4b, 0x37, 0x36, 0x86, 0x71, 0xad, 0xa0, 0x0d, 0xbe, 0xc0, 0x00, 0x08, 0x00, 0x00, 0x00, 0xce, 0x02, 0x00, 0x00, 0x79, 0x8b, 0xd7, 0x89, 0xc7, 0xe7, 0xd5, 0xc0, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0x99, 0xd0, 0x85, 0xc0, 0x8c, 0x6d, 0x1a, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x00, 0x95, 0xa9, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x63, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x06, 0x4a, 0x15, 0xdf, 0xb1, 0x6e, 0x4a, 0x18, 0x4a, 0x0b, 0x84, 0x86, 0x68, 0x69, 0xc8, 0x5e, 0x8e, 0xb5, 0x0f, 0xbe, 0x94, 0x86, 0x50, 0xcc, 0x70, 0xe7, 0xff, 0xc0, 0x89, 0xd6, 0x00, 0x19, 0x61, 0x46, 0xeb, 0xb8, 0x00, 0x44, 0x89, 0x65, 0x71, 0x1d, 0x9f, 0x04, 0x50, 0x00, 0xe7, 0x15, 0xd2, 0x0f, 0xb6, 0xcc, 0x31, 0xa8, 0x17, 0x6d, 0x5a, 0x0d, 0x95, 0xc0, 0x0b, 0xbd, 0xed, 0x00, 0x22, 0x85, 0xa4, 0xb9, 0x6e, 0xd7, 0xb9, 0xf3, 0xaa, 0x94, 0x94, 0x8a, 0x7e, 0xef, 0x9a, 0x76, 0xcd, 0xf0, 0xe0, 0xb1, 0x66, 0x4a, 0x10, 0x4a, 0x09, 0xd7, 0xb1, 0x76, 0xcc, 0x65, 0xcd, 0xc8, 0x56, 0x61, 0x0c, 0xb6, 0x45, 0xe9, 0x86, 0x58, 0x59, 0xc8, 0x26, 0xd5, 0x27, 0x00, 0xe7, 0x1d, 0xc2, 0x89, 0xd6, 0x00, 0x19, 0x61, 0x5b, 0xea, 0x9a, 0x02, 0x44, 0x89, 0x65, 0x71, 0xc5, 0xe7, 0xcf, 0xc0, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0xf3, 0xd0, 0x85, 0xc0, 0x8c, 0x6d, 0xa3, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x95, 0xa9, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x73, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x1b, 0x4a, 0x1a, 0xdf, 0xb1, 0x6e, 0xd5, 0x27, 0x00, 0x00, 0x08, 0x85, 0x39, 0x92, 0x86, 0x79, 0x08, 0x93, 0xb4, 0x45, 0xb7, 0x4b, 0x37, 0x36, 0x86, 0x71, 0xad, 0xf0, 0x0f, 0xbe, 0xc0, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc7, 0x71, 0x85, 0x86, 0x53, 0x28, 0x80, 0xb5, 0xd0, 0x0f, 0x3f, 0x9b, 0x66, 0xe6, 0x38, 0x03, 0xc3, 0x0f, 0x95, 0xfd, 0x51, 0x45, 0xef, 0x0f, 0xb9, 0xd1, 0x64, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x65, 0xdf, 0x3b, 0x20, 0x00, 0x23, 0x85, 0x3f, 0x4a, 0x51, 0xdf, 0xb9, 0xf3, 0xed, 0xa4, 0xb1, 0x66, 0xcf, 0x3f, 0x93, 0x2a, 0x83, 0xe7, 0xec, 0xe0, 0x0f, 0xb6, 0x01, 0x24, 0xe9, 0x37, 0x17, 0xe7, 0x39, 0x46, 0xad, 0x0f, 0x37, 0x1e, 0x00, 0x11, 0x61, 0x41, 0xeb, 0xf7, 0x01, 0x3d, 0xd9, 0x44, 0x89, 0xe6, 0x86, 0x53, 0x28, 0x75, 0xb5, 0xd0, 0x90, 0x19, 0x4e, 0x86, 0x71, 0xad, 0x85, 0x21, 0xd0, 0x85, 0xfd, 0x6d, 0xa0, 0xc0, 0x88, 0x4a, 0x7b, 0xcf, 0xb9, 0xf3, 0x78, 0x00, 0x08, 0x9d, 0xe0, 0x97, 0x95, 0x26, 0x84, 0x00, 0x2b, 0x20, 0x87, 0xf3, 0xaa, 0xa2, 0xb9, 0xfb, 0x78, 0x00, 0x08, 0x9d, 0xa2, 0xb9, 0xfb, 0x61, 0xcd, 0xd9, 0x37, 0x27, 0xe7, 0x41, 0x44, 0xaf, 0x0f, 0xfa, 0x59, 0xe9, 0x3f, 0x82, 0x5d, 0x75, 0xbd, 0xc0, 0x89, 0x5f, 0x4e, 0x00, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x79, 0xeb, 0xd3, 0x89, 0xc7, 0xe7, 0x33, 0xc3, 0x0f, 0xb6, 0x59, 0xd1, 0x3f, 0x82, 0x07, 0x01, 0xd3, 0x85, 0xc0, 0x8c, 0x6d, 0xb1, 0x87, 0xd1, 0x2f, 0x00, 0x00, 0x95, 0xa7, 0xb9, 0xfb, 0x37, 0x2e, 0x66, 0xc0, 0x61, 0x4b, 0x9a, 0x7e, 0x68, 0x4a, 0x59, 0x4a, 0x19, 0x4a, 0x15, 0xdf, 0xb1, 0x6e, 0x4a, 0x03, 0x4a, 0x1c, 0x84, 0x86, 0x68, 0x70, 0x86, 0x71, 0xad, 0x0e, 0x0d, 0xbe, 0xd0, 0x4b, 0x3f, 0xa3, 0x27, 0xc8, 0x56, 0x67, 0x8a, 0xd6, 0x89, 0x4e, 0x36, 0x18, 0xc5, 0xe8, 0x20, 0x47, 0x89, 0xe6, 0x0a, 0x3f, 0x99, 0xdf, 0x94, 0xc0, 0x0f, 0x3f, 0x0e, 0x86, 0x71, 0xad, 0x61, 0x22, 0xd0, 0x85, 0x43, 0xf7, 0x35, 0xcf, 0x1c, 0x85, 0xe0, 0xb9, 0x66, 0x4a, 0x1d, 0x4a, 0x51, 0xf9, 0xdf, 0x33, 0x85, 0xad, 0xd1, 0xcf, 0x2e, 0x70, 0x87, 0xf3, 0xaa, 0x3f, 0x9f, 0x2e, 0x40, 0x9f, 0x26, 0xd5, 0x3e, 0x9f, 0x2e, 0x50, 0x19, 0x46, 0x19, 0x57, 0x78, 0x01, 0x92, 0x90, 0x90, 0xd4, 0x19, 0x76, 0x19, 0x57, 0x78, 0x40, 0x90, 0x90, 0x90, 0x19, 0x4e, 0x19, 0x57, 0x78, 0x1e, 0x93, 0x90, 0x90, 0x13, 0x68, 0x30, 0x9f, 0x04, 0x50, 0x9f, 0x26, 0x40, 0x9f, 0x26, 0xd5, 0x7f, 0xb1, 0x40, 0x15, 0x50, 0x9f, 0x05, 0x50, 0x00, 0x00, 0x08, 0x38, 0x00, 0x90, 0xe4, 0x81, 0xd8, 0x1b, 0x95, 0x6b, 0xbc, 0x90, 0x90, 0xd8, 0x19, 0x57, 0x78, 0xeb, 0x6d, 0x6f, 0x6f, 0x7b, 0x9f, 0xd8, 0x1b, 0x95, 0x62, 0xbc, 0x90, 0x90, 0xd8, 0x19, 0x57, 0x78, 0xfa, 0x6d, 0x6f, 0x6f, 0x28, 0x90, 0x90, 0x90, 0x90, 0xd8, 0x13, 0x54, 0xc0, 0xcb, 0xd1, 0xcc, 0xcd, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ])
    start_address = 0x555555555310
    key_size = 64

    try:
        md = Cs(CS_ARCH_X86, CS_MODE_64)
    except CsError as e:
        print("[-] Capstone Initialization Error: %s" % e)
        return

    code_to_decrypt = bytearray(initial_encrypted_code)

    for i in range(0, len(full_xor_key_stream), key_size):
        current_key = full_xor_key_stream[i : i + key_size]
        key_number = (i // key_size) + 1

        if len(current_key) < key_size:
            print(f"--- [ Skipping final chunk (not {key_size} bytes) ] ---\n")
            continue

        print(f"--- [ Decryption Stage #{key_number} (using key chunk {key_number}) ] ---\n")

        decrypted_code_at_stage = bytearray()
        for j in range(len(code_to_decrypt)):
            decrypted_byte = code_to_decrypt[j] ^ current_key[j]
            decrypted_code_at_stage.append(decrypted_byte)

        print(f"Disassembly after Stage #{key_number}:")
        for instruction in md.disasm(decrypted_code_at_stage, start_address):
            print("0x%x:\t%s\t%s" % (instruction.address, instruction.mnemonic, instruction.op_str))
        
        code_to_decrypt = decrypted_code_at_stage
        
        print("\n" + "="*50 + "\n")


if __name__ == '__main__':
    solve_smc_chained_chunk()
